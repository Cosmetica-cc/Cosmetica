plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

repositories {
	maven { url "https://server.bbkr.space/artifactory/libs-release" } // Cotton maven - home of Cotton projects
	maven { url "https://maven.modmuss50.me" }
	maven { url "https://maven.abusedmaster.xyz" } // NerdHub maven
	maven {
		name = "Onyx Studios"
		url = "https://maven.onyxstudios.dev"
	}
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		"net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include(modImplementation(fabricApi.module("fabric-api-base", "0.46.1+1.17")))
	include(modImplementation(fabricApi.module("fabric-resource-loader-v0", "0.46.1+1.17")))
	include(modImplementation(fabricApi.module("fabric-textures-v0", "0.46.1+1.17")))

	modRuntime ("supercoder79:databreaker:0.2.7") {
		exclude module: "fabric-loader"
	}

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
	
	modImplementation 'com.github.Station-rip:FabriStation:1.17-SNAPSHOT'
	
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven { url 'https://jitpack.io' }
	}
}
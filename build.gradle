plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

repositories {
	maven { url 'https://maven.parchmentmc.org' }
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/' }
}

loom {
	accessWidenerPath = file("src/main/resources/cosmetica.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${project.parchment_version}@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include(modImplementation(fabricApi.module("fabric-api-base", "${project.fabric_api_version}")))
	include(modImplementation(fabricApi.module("fabric-resource-loader-v0", "${project.fabric_api_version}")))

	include(modImplementation("com.github.BenzeneStudios:Sulphate:${project.sulphate_version}")) {
		exclude module: "fabric-api"
		exclude module: "databreaker"
	}

	// Cosmetica.java library
	include(implementation("com.github.Cosmetica-cc:CosmeticaDotJava:${project.cosmetica_dot_java_version}"))

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"

	// Fixes running in dev with FabriStation which requires all of fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Load in dev for Compat & Interacting with
	//modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven { url 'https://jitpack.io' }
	}
}
